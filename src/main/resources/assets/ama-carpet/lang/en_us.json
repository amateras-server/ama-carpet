{
  "carpet.category.ama": "ama",

  "ama.message.on_cheat_dc": "You are using %s, which is not allowed in this server.\nRejoin after disabling this feature.",
  "ama.message.on_timeout_dc": "AmaCarpet Client not found. This server requires the AmaCarpet mod to join. Please install it from Modrinth or GitHub.",
  "ama.message.restriction.changed": "Restriction settings changed. %s is %s.",
  "ama.message.restriction.invalid": "Invalid feature name! Use one of the suggested feature names.",
  "ama.message.restriction.state": "%s is %s.",
  "ama.message.schematic.shared": " shared a schematic!\nPlacement name : ",
  "ama.message.schematic.unshared": " unshared a schematic\nPlacement name : ",
  "carpet.rule.cheatRestriction.desc": "Prohibits specific features in client-side mods such as tweakeroo, tweakermore, litematica. The features to restrict can be configure using the /restriction command. Only works in server side",
  "carpet.rule.commandRestriction.desc": "Enables /restriction command to configure features restricted by cheatRestriction.",
  "carpet.rule.disableAnimalSpawnOnChunkGen.desc": "Disables animal spawning during chunk generation.",
  "carpet.rule.disableSoundEngine.desc": "Disables all server-side sound engine processes",
  "carpet.rule.endGatewayChunkLoad.desc": "Allows entities traveling through end gateway portals to load a 3x3 chunk area, similar to nether portals.",
  "carpet.rule.endPortalChunkLoad.desc": "Allows entities traveling through end portals to load a 3x3 chunk area, similar to nether portals.",
  "carpet.rule.notifySchematicShare.desc": "Sends notifications to player's chat when a schematic is shared or unshared using syncmatica or kyoyu.",
  "carpet.rule.reloadPortalTicket.desc": "Reloads all Nether portal chunk-loading tickets during server startup. This ensures that chunk loaders remain functional after server restarts.",
  "carpet.rule.requireAmaCarpetClient.desc": "Prevents clients without AmaCarpet installed from logging in. The timeout duration can be configured with requireAmaCarpetClientTimeoutSeconds",
  "carpet.rule.requireAmaCarpetClientTimeoutSeconds.desc": "Timeout duration for checking if the client has AmaCarpet."
}